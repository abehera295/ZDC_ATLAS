


void map_zdc_online(){
  int side_db[16][16] = {
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
  };

  int module_db[16][16] =
    {
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {3,3,3,3,0,0,0,0,1,1,1,1,2,2,2,2},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {3,3,3,3,0,0,0,0,1,1,1,1,2,2,2,2},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
    };

  int type_db[16][16] =
    {
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
    };

  int channel_db[16][16] =
    {
      {8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15},
      {24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31},
      {40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47},
      {56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63},
      {0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7},
      {16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23},
      {32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39},
      {48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {1,1,5,5,0,0,4,4,3,3,7,7,2,2,6,6},
      {12,12,8,8,13,13,9,9,14,14,10,10,15,15,11,11},
      {20,20,16,16,21,21,17,17,22,22,18,18,23,23,19,19},
      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
      {1,1,5,5,0,0,4,4,3,3,7,7,2,2,6,6},
      {12,12,8,8,13,13,9,9,14,14,10,10,15,15,11,11},
      {20,20,16,16,21,21,17,17,22,22,18,18,23,23,19,19},
    };

  int  ppm_db[16] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};

  // this is a mess.  need to derive crate_index and m_crate_index from the crate_db, but not\
 right this second
  //int crate_db[8] = {12,12,12,12,14,14,14,14};
  int crate_index[16] ={0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3};
  /*
  m_ncrate = 4;
  m_crate_index[0] = 10;
  m_crate_index[1] = 11;
  m_crate_index[2] = 12;
  m_crate_index[3] = 14;
  */
  for (int i = 0 ; i < 16 ; i++)
    {
      for (int j = 0 ; j < 16 ; j++)
        {
	  
	  int ic = crate_index[i]; // crate index
          int icc = i*16+j-64*ic; // channel index
	  /*
	  //std::cout << "ic=" << ic << "  icc=" << icc << std::endl;
          m_side_db[ic][icc] = side_db[i][j];
          m_module_db[ic][icc] = module_db[i][j];
          m_type_db[ic][icc] = type_db[i][j];
          m_channel_db[ic][icc] = channel_db[i][j];
          m_gain_db[ic][icc] = gain_db[i][j];
          m_delay_db[ic][icc] = delay_db[i][j];
          m_hv_db[ic][icc] = hv_db[i][j];
          m_ppm_db[ic] = ppm_db[i];
          //m_crate_lookup[m_side_db[i][j]][m_module_db[i][j]][m_type_db[i][j]] = ic;
          //m_channel_lookup[m_side_db[i][j]][m_module_db[i][j]][m_type_db[i][j]][j][m_gain_d\
b[i][j]][m_delay_db[i][j]] = icc;
	  */
	  if(module_db[i][j]==0) continue;
	  cout<<"Module="<<module_db[i][j]<<",\t Side="<<side_db[i][j]<<",\t ic="<<ic<<",\t icc="<<icc<<endl;
        }
    }
  
}

